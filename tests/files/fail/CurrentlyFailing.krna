
import java::io::IOException
import java::nio::file::Files
import java::nio::file::Path

-> TODO string is from type object...

interface TestInterface3<B> {
    fn make(self) -> B
}

interface TestInterface4<B> {
    fn make(self) -> B
}

struct Test3 {

    impl TestInterface4<Object> {
    }


    impl TestInterface3<String> {
        fn make(self) -> string {
            "Hello"
        }
    }

}




// fails when running:
fn loadFile(path: string) -> string?IOException {
    let abs_path = Path.of(path, []).toAbsolutePath()
    Result::safeCallExpect(IOException, fn() impl String { bytes: Files.readAllBytes(abs_path) } )
}