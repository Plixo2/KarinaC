/* OK */

struct W<T> {
    name: T
    number: int
    floating: float
    boolean: bool
    short_: short
    long_: long
    byte_: byte
    char_: char
    text: string
}

fn arrayOut() -> [int] {
    <int>[1, 2, 3]
}

fn arrayIn(arr: [int]) -> void {
    let d: double = 1.0
}

fn map(function: fn(Integer) -> Integer) {
    let nested: (fn((Integer)) -> Integer) = function
}



fn returnVoid() -> void {

}
